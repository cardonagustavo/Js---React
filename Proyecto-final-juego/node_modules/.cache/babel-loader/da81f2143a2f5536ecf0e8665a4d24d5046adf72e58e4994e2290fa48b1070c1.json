{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Proyecto Final\\\\mi-juego\\\\src\\\\components\\\\GeneradorNumeros.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BotonGenerarNumero from './BotonGenerarNumero';\nimport MostrarNumero from './MostrarNumero';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_NUMEROS = 5; // Número máximo de elementos en la lista\n\nconst GeneradorNumeros = () => {\n  _s();\n  const [numeroGenerado, setNumeroGenerado] = useState(null);\n  const [numerosGuardados, setNumerosGuardados] = useState([]);\n  const [guardado, setGuardado] = useState(false);\n  const generarNumeroAleatorio = () => {\n    const nuevoNumero = Math.floor(Math.random() * 100) + 1;\n    setNumeroGenerado(nuevoNumero);\n    setGuardado(false); // Desbloquear el botón de guardar al generar un nuevo número\n  };\n  const guardarNumero = () => {\n    if (numeroGenerado !== null && numerosGuardados.length < MAX_NUMEROS) {\n      const nuevaLista = [...numerosGuardados, numeroGenerado];\n      nuevaLista.sort((a, b) => a - b); // Ordenar de menor a mayor\n      setNumerosGuardados(nuevaLista);\n      setGuardado(true); // Bloquear el botón de guardar después de guardar el número\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(BotonGenerarNumero, {\n      onClick: generarNumeroAleatorio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), numeroGenerado && /*#__PURE__*/_jsxDEV(MostrarNumero, {\n      numero: numeroGenerado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: guardarNumero,\n      disabled: guardado || numerosGuardados.length === MAX_NUMEROS,\n      children: \"Guardar n\\xFAmero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"N\\xFAmeros guardados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: numerosGuardados.map((numero, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: numero\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneradorNumeros, \"B3VK3XLIOH79/0qHJGqjttlUAyU=\");\n_c = GeneradorNumeros;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px'\n  }\n};\nexport default GeneradorNumeros;\nvar _c;\n$RefreshReg$(_c, \"GeneradorNumeros\");","map":{"version":3,"names":["React","useState","BotonGenerarNumero","MostrarNumero","jsxDEV","_jsxDEV","MAX_NUMEROS","GeneradorNumeros","_s","numeroGenerado","setNumeroGenerado","numerosGuardados","setNumerosGuardados","guardado","setGuardado","generarNumeroAleatorio","nuevoNumero","Math","floor","random","guardarNumero","length","nuevaLista","sort","a","b","style","styles","container","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","numero","disabled","map","index","_c","textAlign","padding","$RefreshReg$"],"sources":["C:/xampp/htdocs/Proyecto Final/mi-juego/src/components/GeneradorNumeros.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport BotonGenerarNumero from './BotonGenerarNumero';\r\nimport MostrarNumero from './MostrarNumero';\r\n\r\nconst MAX_NUMEROS = 5; // Número máximo de elementos en la lista\r\n\r\nconst GeneradorNumeros = () => {\r\n  const [numeroGenerado, setNumeroGenerado] = useState(null);\r\n  const [numerosGuardados, setNumerosGuardados] = useState([]);\r\n  const [guardado, setGuardado] = useState(false);\r\n\r\n  const generarNumeroAleatorio = () => {\r\n    const nuevoNumero = Math.floor(Math.random() * 100) + 1;\r\n    setNumeroGenerado(nuevoNumero);\r\n    setGuardado(false); // Desbloquear el botón de guardar al generar un nuevo número\r\n  };\r\n\r\n  const guardarNumero = () => {\r\n    if (numeroGenerado !== null && numerosGuardados.length < MAX_NUMEROS) {\r\n      const nuevaLista = [...numerosGuardados, numeroGenerado];\r\n      nuevaLista.sort((a, b) => a - b); // Ordenar de menor a mayor\r\n      setNumerosGuardados(nuevaLista);\r\n      setGuardado(true); // Bloquear el botón de guardar después de guardar el número\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <BotonGenerarNumero onClick={generarNumeroAleatorio} />\r\n      {numeroGenerado && <MostrarNumero numero={numeroGenerado} />}\r\n      <button onClick={guardarNumero} disabled={guardado || numerosGuardados.length === MAX_NUMEROS}>\r\n        Guardar número\r\n      </button>\r\n      <div>\r\n        <h2>Números guardados:</h2>\r\n        <ul>\r\n          {numerosGuardados.map((numero, index) => (\r\n            <li key={index}>{numero}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n  },\r\n};\r\n\r\nexport default GeneradorNumeros;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}