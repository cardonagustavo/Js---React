{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Proyecto Final\\\\mi-juego\\\\src\\\\components\\\\GeneradorNumeros.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../generadorNumeros.css'; // Import CSS styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUM_CASILLAS = 5; // Number of available cells\n\nconst NumberGenerator = () => {\n  _s();\n  const [numberCells, setNumberCells] = useState(Array(NUM_CASILLAS).fill(null));\n  const [generatedNumber, setGeneratedNumber] = useState(null);\n  const [message, setMessage] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const generateRandomNumber = () => {\n    const newNumber = Math.floor(Math.random() * 100) + 1;\n    setGeneratedNumber(newNumber);\n    setMessage('');\n  };\n  const saveNumber = index => {\n    if (!gameOver && generatedNumber !== null && numberCells[index] === null) {\n      const newList = [...numberCells];\n      newList[index] = generatedNumber;\n      setNumberCells(newList);\n      setGeneratedNumber(null);\n      if (newList.filter(Boolean).length >= 2) {\n        const storedNumbers = newList.filter(Boolean);\n        const isOrdered = storedNumbers.every((num, i) => i === 0 || num >= storedNumbers[i - 1]);\n        if (!isOrdered) {\n          setMessage('You lost!');\n          setGameOver(true);\n        } else if (storedNumbers.length === NUM_CASILLAS) {\n          setMessage('You won!');\n          setGameOver(true);\n        }\n      }\n    }\n  };\n  const restartGame = () => {\n    setNumberCells(Array(NUM_CASILLAS).fill(null));\n    setGeneratedNumber(null);\n    setMessage('');\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Number Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Generated number: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 12\n        }, this), generatedNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberCellsContainer\",\n      children: numberCells.map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numberCell\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: number || '',\n          onChange: () => {},\n          disabled: true,\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => saveNumber(index),\n          disabled: generatedNumber === null || gameOver,\n          className: generatedNumber === null || gameOver ? \"disabledButton\" : \"button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateRandomNumber,\n      disabled: generatedNumber !== null || gameOver,\n      className: \"generateButton\",\n      children: \"Generate number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: message === 'You lost!' ? 'lost' : 'message',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      className: \"restartButton\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn-txt\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(NumberGenerator, \"X5wiCXEeOFMq79vFqj2TVWBwCBs=\");\n_c = NumberGenerator;\nexport default NumberGenerator;\nvar _c;\n$RefreshReg$(_c, \"NumberGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NUM_CASILLAS","NumberGenerator","_s","numberCells","setNumberCells","Array","fill","generatedNumber","setGeneratedNumber","message","setMessage","gameOver","setGameOver","generateRandomNumber","newNumber","Math","floor","random","saveNumber","index","newList","filter","Boolean","length","storedNumbers","isOrdered","every","num","i","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","number","type","value","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Proyecto Final/mi-juego/src/components/GeneradorNumeros.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../generadorNumeros.css'; // Import CSS styles\r\n\r\nconst NUM_CASILLAS = 5; // Number of available cells\r\n\r\nconst NumberGenerator = () => {\r\n  const [numberCells, setNumberCells] = useState(Array(NUM_CASILLAS).fill(null));\r\n  const [generatedNumber, setGeneratedNumber] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const generateRandomNumber = () => {\r\n    const newNumber = Math.floor(Math.random() * 100) + 1;\r\n    setGeneratedNumber(newNumber);\r\n    setMessage('');\r\n  };\r\n\r\n  const saveNumber = (index) => {\r\n    if (!gameOver && generatedNumber !== null && numberCells[index] === null) {\r\n      const newList = [...numberCells];\r\n      newList[index] = generatedNumber;\r\n      setNumberCells(newList);\r\n      setGeneratedNumber(null);\r\n\r\n      if (newList.filter(Boolean).length >= 2) {\r\n        const storedNumbers = newList.filter(Boolean);\r\n        const isOrdered = storedNumbers.every((num, i) => i === 0 || num >= storedNumbers[i - 1]);\r\n        if (!isOrdered) {\r\n          setMessage('You lost!');\r\n          setGameOver(true);\r\n        } else if (storedNumbers.length === NUM_CASILLAS) {\r\n          setMessage('You won!');\r\n          setGameOver(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setNumberCells(Array(NUM_CASILLAS).fill(null));\r\n    setGeneratedNumber(null);\r\n    setMessage('');\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Random Number Generator</h1>\r\n      <div>\r\n        <p><span>Generated number: </span>{generatedNumber}</p>\r\n      </div>\r\n      <div className=\"numberCellsContainer\">\r\n        {numberCells.map((number, index) => (\r\n          <div key={index} className=\"numberCell\">\r\n            <input\r\n              type=\"number\"\r\n              value={number || ''}\r\n              onChange={() => {}}\r\n              disabled\r\n              className=\"input\"\r\n            />\r\n            <button onClick={() => saveNumber(index)} disabled={generatedNumber === null || gameOver} className={generatedNumber === null || gameOver ? \"disabledButton\" : \"button\"}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={generateRandomNumber} disabled={generatedNumber !== null || gameOver} className=\"generateButton\">\r\n        Generate number\r\n      </button>\r\n      {message && <p className={message === 'You lost!' ? 'lost' : 'message'}>{message}</p>}\r\n      {gameOver && (\r\n        <button onClick={restartGame} className=\"restartButton\">\r\n          <span className=\"btn-txt\">Restart</span>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberGenerator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}