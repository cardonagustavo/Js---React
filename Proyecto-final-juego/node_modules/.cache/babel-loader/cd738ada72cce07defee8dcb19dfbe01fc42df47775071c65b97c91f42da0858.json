{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Proyecto Final\\\\mi-juego\\\\src\\\\components\\\\GeneradorNumeros.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BotonGenerarNumero from './BotonGenerarNumero';\nimport MostrarNumero from './MostrarNumero';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUM_CASILLAS = 5; // Número de casillas disponibles\n\nconst GeneradorNumeros = () => {\n  _s();\n  const [numeroGenerado, setNumeroGenerado] = useState(null);\n  const [numerosGuardados, setNumerosGuardados] = useState([]);\n  const [guardado, setGuardado] = useState(false);\n  const [perdio, setPerdio] = useState(false);\n  const generarNumeroAleatorio = () => {\n    const nuevoNumero = Math.floor(Math.random() * 100) + 1;\n    setNumeroGenerado(nuevoNumero);\n    setGuardado(false); // Desbloquear el botón de guardar al generar un nuevo número\n  };\n  const guardarNumero = () => {\n    if (numeroGenerado !== null && numerosGuardados.length < NUM_CASILLAS) {\n      const nuevaLista = [...numerosGuardados, numeroGenerado];\n      nuevaLista.sort((a, b) => a - b); // Ordenar de menor a mayor\n      setNumerosGuardados(nuevaLista);\n      setGuardado(true); // Bloquear el botón de guardar después de guardar el número\n      if (nuevaLista.length === NUM_CASILLAS) {\n        const esMayorQueTodos = nuevaLista.every(num => num < numeroGenerado);\n        if (!esMayorQueTodos) {\n          setPerdio(true);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: perdio ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\xA1Perdiste! Has ingresado un n\\xFAmero mayor que todos los n\\xFAmeros almacenados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BotonGenerarNumero, {\n        onClick: generarNumeroAleatorio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), numeroGenerado && /*#__PURE__*/_jsxDEV(MostrarNumero, {\n        numero: numeroGenerado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guardarNumero,\n        disabled: guardado || numerosGuardados.length === NUM_CASILLAS,\n        children: \"Guardar n\\xFAmero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"N\\xFAmeros guardados:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: numerosGuardados.map((numero, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: numero\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GeneradorNumeros, \"qzEj5YVYNTL/RVH0OH0nD3BlRts=\");\n_c = GeneradorNumeros;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px'\n  }\n};\nexport default GeneradorNumeros;\nvar _c;\n$RefreshReg$(_c, \"GeneradorNumeros\");","map":{"version":3,"names":["React","useState","BotonGenerarNumero","MostrarNumero","jsxDEV","_jsxDEV","Fragment","_Fragment","NUM_CASILLAS","GeneradorNumeros","_s","numeroGenerado","setNumeroGenerado","numerosGuardados","setNumerosGuardados","guardado","setGuardado","perdio","setPerdio","generarNumeroAleatorio","nuevoNumero","Math","floor","random","guardarNumero","length","nuevaLista","sort","a","b","esMayorQueTodos","every","num","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","numero","disabled","map","index","_c","textAlign","padding","$RefreshReg$"],"sources":["C:/xampp/htdocs/Proyecto Final/mi-juego/src/components/GeneradorNumeros.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport BotonGenerarNumero from './BotonGenerarNumero';\r\nimport MostrarNumero from './MostrarNumero';\r\n\r\nconst NUM_CASILLAS = 5; // Número de casillas disponibles\r\n\r\nconst GeneradorNumeros = () => {\r\n  const [numeroGenerado, setNumeroGenerado] = useState(null);\r\n  const [numerosGuardados, setNumerosGuardados] = useState([]);\r\n  const [guardado, setGuardado] = useState(false);\r\n  const [perdio, setPerdio] = useState(false);\r\n\r\n  const generarNumeroAleatorio = () => {\r\n    const nuevoNumero = Math.floor(Math.random() * 100) + 1;\r\n    setNumeroGenerado(nuevoNumero);\r\n    setGuardado(false); // Desbloquear el botón de guardar al generar un nuevo número\r\n  };\r\n\r\n  const guardarNumero = () => {\r\n    if (numeroGenerado !== null && numerosGuardados.length < NUM_CASILLAS) {\r\n      const nuevaLista = [...numerosGuardados, numeroGenerado];\r\n      nuevaLista.sort((a, b) => a - b); // Ordenar de menor a mayor\r\n      setNumerosGuardados(nuevaLista);\r\n      setGuardado(true); // Bloquear el botón de guardar después de guardar el número\r\n      if (nuevaLista.length === NUM_CASILLAS) {\r\n        const esMayorQueTodos = nuevaLista.every(num => num < numeroGenerado);\r\n        if (!esMayorQueTodos) {\r\n          setPerdio(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {perdio ? (\r\n        <h1>¡Perdiste! Has ingresado un número mayor que todos los números almacenados.</h1>\r\n      ) : (\r\n        <>\r\n          <BotonGenerarNumero onClick={generarNumeroAleatorio} />\r\n          {numeroGenerado && <MostrarNumero numero={numeroGenerado} />}\r\n          <button onClick={guardarNumero} disabled={guardado || numerosGuardados.length === NUM_CASILLAS}>\r\n            Guardar número\r\n          </button>\r\n          <div>\r\n            <h2>Números guardados:</h2>\r\n            <ul>\r\n              {numerosGuardados.map((numero, index) => (\r\n                <li key={index}>{numero}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    padding: '20px',\r\n  },\r\n};\r\n\r\nexport default GeneradorNumeros;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}